---
#get our info from aws
# - name: get ec2 facts
#   ec2_metadata_facts:

# - name: maintain ansible_player
#   copy:
#     src: files/ansible_player
#     dest: /usr/local/bin/ansible_player
#     owner: root
#     group: root
#     mode: 0744

# - name: maintain ansible_player.cron
#   copy:
#     src: files/ansible_player.cron
#     dest: /etc/cron.d/ansible_player
#     owner: root
#     group: root
#     mode: 0644

#pull the hostname from aws tags
# - name: Find the hostname from meta data
#   shell: set -o pipefail && false| echo $(aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep hostname | awk '{print $5}') > /etc/hostname
#   executable: /bin/bash

- name: read in the hostname
  shell: hostname $(cat /etc/hostname)
  executable: /bin/bash
  notify:
    - syslog restart

- name: set hostname var
  shell: cat /etc/hostname
  executable: /bin/bash
  register: local_hostname

- name: configure hosts file
  template:
    src: templates/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0642
  become: yes

- name: Create logrotate entry for ansible_player.log
  template:
    src: templates/etc_logrotate.d_ansible_player.j2
    dest: /etc/logrotate.d/ansible_player
    owner: root
    group: root
    mode: 0644
  become: yes

############
#
# add influxdb repo
#
############
- name: Check if telegraf is installed
  command: dpkg-query -W telegraf
  register: telegraf_check_deb
  failed_when: telegraf_check_deb.rc > 1
  changed_when: telegraf_check_deb.rc == 1

- name: add influxdb repository keys
  apt_key:
    url: https://repos.influxdata.com/influxdb.key
    state: present
  become: yes
  when: telegraf_check_deb.rc == 1

- name: add telegraf repository
  apt_repository:
    repo: deb https://repos.influxdata.com/{{ ansible_lsb['id']|lower }} {{ ansible_lsb['codename'] }} stable
    state: present
    filename: influxdb
  become: yes
  when: telegraf_check_deb.rc == 1

- name: Wait for automatic system updates
  become: yes
  shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;

#install common packages
- name: Install a list of packages
  apt:
    pkg:
      - zsh
      - nano
      - facter
      - awscli
      - jq
      - mlocate
      - python3-pip
      - python3-boto
      - net-tools
      - bash-completion
      - zip
      - chrony
      - telegraf

- name: configure telegraf.conf
  template:
    src: templates/telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
    owner: telegraf
    group: telegraf
    mode: 0660
  become: yes
  register: telegraf_configuration
  notify:
    - telegraf restart

- name: add telegraf service to onboot
  service: name=telegraf enabled=yes
  become: yes

- name: start telegraf service
  service: name=telegraf state=started
  become: yes

#we need to get our aws inventory easily
- name: configure ec2.py
  template:
    src: ec2.py.j2
    dest: /etc/ansible/hosts
    owner: root
    group: root
    mode: 0755
  become: yes

- name: configure ec2.ini
  template:
    src: ec2.ini.j2
    dest: /etc/ansible/ec2.ini
    owner: root
    group: root
    mode: 0744
  become: yes

- name: configure resolv.conf file
  template:
    src: templates/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: 0644
  become: yes

########
#chrony - ntp
######
- name: Setup Chrony to use aws time server
  lineinfile:
    path: /etc/chrony/chrony.conf
    regexp: 'server 169.254.169.123'
    line: server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4
  notify:
    - chrony restart


########
#add ansible.cfg
######
- name: add ansible timestamps so that we can see details
  lineinfile:
    path: /etc/ansible/ansible.cfg
    insertafter: "some basic default values"
    state: present
    line: callback_whitelist = profile_tasks
  become: yes


######
##sysctl
######

- name: max watched files
  sysctl:
    name: fs.inotify.max_user_watches
    value: "524288"
    sysctl_set: yes
    state: present
    reload: yes

######
# elasticseatch virtual memory
# https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
######
- name: maximum number of memory map areas
  sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: yes
    state: present
    reload: yes

- name: maximum file descriptors
  sysctl:
    name: fs.file-max
    value: "2000064"
    sysctl_set: yes
    state: present
    reload: yes




