---
#get our info from aws
- name: get ec2 facts
  ec2_metadata_facts:

#pull the hostname from aws tags
- name: Find the hostname from meta data
  shell: set -o pipefail && true |echo $(aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep hostname | awk '{print $5}')
  args:
    executable: /bin/bash
    warn: no
  register: local_hostname

- name: read in the hostname
  shell: hostname $(cat /etc/hostname)
  args:
    executable: /bin/bash
    warn: no

- name: maintain ansible_player
  copy:
    src: files/ansible_player
    dest: /usr/local/bin/ansible_player
    owner: root
    group: root
    mode: 0744

- name: maintain ansible_player.cron
  copy:
    src: files/ansible_player.cron
    dest: /etc/cron.d/ansible_player
    owner: root
    group: root
    mode: 0644

# - name: set hostname var
#   shell: cat /etc/hostname
#   args:
#     executable: /bin/bash
#     warn: no
#   register: local_hostname

- name: configure /etc/hostname file
  template:
    src: templates/hostname.j2
    dest: /etc/hostname
    owner: root
    group: root
    mode: 0644
  become: yes
  notify:
    - syslog restart

- name: configure hosts file
  template:
    src: templates/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
  become: yes

- name: Create logrotate entry for ansible_player.log
  template:
    src: templates/etc_logrotate.d_ansible_player.j2
    dest: /etc/logrotate.d/ansible_player
    owner: root
    group: root
    mode: 0644
  become: yes

############
#
# add influxdb repo
#
############
- name: Check if telegraf is installed
  command: dpkg-query -W telegraf
  register: telegraf_check_deb
  failed_when: telegraf_check_deb.rc > 1
  changed_when: telegraf_check_deb.rc == 1

- name: add influxdb repository keys
  apt_key:
    url: https://repos.influxdata.com/influxdb.key
    state: present
  become: yes
  when: telegraf_check_deb.rc == 1

- name: add telegraf repository
  apt_repository:
    repo: deb https://repos.influxdata.com/{{ ansible_lsb['id']|lower }} {{ ansible_lsb['codename'] }} stable
    state: present
    filename: influxdb
  become: yes
  when: telegraf_check_deb.rc == 1

- name: Wait for automatic system updates
  become: yes
  shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;

#filebeat
- name: Check if filebeat-oss is installed
  command: dpkg-query -W filebeat
  register: filebeat_oss_check_deb
  failed_when: filebeat_oss_check_deb.rc > 1
  changed_when: filebeat_oss_check_deb.rc == 1

- name: Download filebeat_oss
  get_url:
    url=" https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{{ filebeat_version }}-amd64.deb"
    dest="/home/ubuntu/filebeat-oss-{{ filebeat_version }}-amd64.deb"
  when: filebeat_oss_check_deb.rc == 1

- name: Install filebeat-{{ filebeat_version }}
  apt: deb="/home/ubuntu/filebeat-oss-{{ filebeat_version }}-amd64.deb"
  become: yes
  when: filebeat_oss_check_deb.rc == 1

- name: configure filebeat.yml
  template:
    src: templates/filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
    owner: root
    group: root
    mode: 0600
  become: yes
  register: filebeat_configuration
  notify:
    - filebeat restart

- name: add filebeat service to onboot
  service: name=filebeat enabled=yes
  become: yes

- name: start filebeat service
  service: name=filebeat state=started
  become: yes

- name: enable filebeat system modules
  shell: set -o pipefail && true |/usr/bin/filebeat modules enable system
  args:
    executable: /bin/bash
    warn: no
  register: filebeat_configuration
  notify:
    - filebeat restart

#/filebeat

#install common packages
- name: Install a list of packages
  apt:
    pkg:
      - zsh
      - nano
      - facter
      - awscli
      - jq
      - mlocate
      - python3-pip
      - python3-boto
      - python3-boto3
      - python-logstash
      - python3-venv
      - net-tools
      - bash-completion
      - zip
      - chrony
      - telegraf
      - inetutils-traceroute


- name: Install later version of awscli than what's available in ubuntu's repo
  pip:
    name: awscli>1.18.69
    executable: /usr/bin/pip3

- name: configure telegraf.conf
  template:
    src: templates/telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
    owner: telegraf
    group: telegraf
    mode: 0660
  become: yes
  register: telegraf_configuration
  notify:
    - telegraf restart

- name: add telegraf service to onboot
  service: name=telegraf enabled=yes
  become: yes

- name: start telegraf service
  service: name=telegraf state=started
  become: yes

#we need to get our aws inventory easily
- name: configure ec2.py
  template:
    src: ec2.py.j2
    dest: /etc/ansible/hosts
    owner: root
    group: root
    mode: 0755
  become: yes

- name: configure ec2.ini
  template:
    src: ec2.ini.j2
    dest: /etc/ansible/ec2.ini
    owner: root
    group: root
    mode: 0744
  become: yes

- name: ensure /root/.aws exists
  file:
    path: /root/.aws
    state: directory
    mode: 0744

- name: configure /root/.aws/config
  template:
    src: root_aws_config
    dest: /root/.aws/config
    owner: root
    group: root
    mode: 0744
  become: yes

- name: configure resolv.conf file
  template:
    src: templates/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: 0644
  become: yes


########
#chrony - ntp
######
- name: Setup Chrony to use aws time server
  lineinfile:
    path: /etc/chrony/chrony.conf
    regexp: 'server 169.254.169.123'
    line: server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4
  notify:
    - chrony restart


########
#add ansible.cfg
######
#TODO add logstash callback plugin - https://github.com/ujenmr/ansible-logstash-callback or ES https://gist.github.com/metmajer/7da2f9599c2d75d80ee5
#https://docs.ansible.com/ansible/2.9/plugins/callback.html#example-callback-plugins
- name: add ansible timestamps so that we can see details
  lineinfile:
    path: /etc/ansible/ansible.cfg
    insertafter: "some basic default values"
    state: present
    line: callback_whitelist = profile_tasks
  become: yes


######
##sysctl
######

- name: max watched files
  sysctl:
    name: fs.inotify.max_user_watches
    value: "524288"
    sysctl_set: yes
    state: present
    reload: yes

######
# elasticseatch virtual memory
# https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
######
- name: maximum number of memory map areas
  sysctl:
    name: vm.max_map_count
    value: "262144"
    sysctl_set: yes
    state: present
    reload: yes

- name: maximum file descriptors
  sysctl:
    name: fs.file-max
    value: "2000064"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.neigh.default.gc_thresh1
  sysctl:
    name: net.ipv4.neigh.default.gc_thresh1
    value: "4092"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.neigh.default.gc_thresh2
  sysctl:
    name: net.ipv4.neigh.default.gc_thresh2
    value: "8192"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.neigh.default.gc_thresh3
  sysctl:
    name: net.ipv4.neigh.default.gc_thresh3
    value: "8192"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.neigh.default.base_reachable_time
  sysctl:
    name: net.ipv4.neigh.default.base_reachable_time
    value: "86400"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.neigh.default.gc_stale_time
  sysctl:
    name: net.ipv4.neigh.default.gc_stale_time
    value: "86400"
    sysctl_set: yes
    state: present
    reload: yes


